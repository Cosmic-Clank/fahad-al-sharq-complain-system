// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  passwordHash String
  fullName  String
  role Role @default(EMPLOYEE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  complaintResponses ComplaintResponse[]
}

enum Role {
  EMPLOYEE
  ADMIN
}

model Complaint {
  id              Int      @id @default(autoincrement())
  customerName    String
  customerEmail   String
  customerPhone   String
  customerAddress String
  buildingName    String
  area            String
  description     String
  imagePaths      String[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  responses       ComplaintResponse[] 
}

model ComplaintResponse {
  id          Int      @id @default(autoincrement())
  complaintId Int
  response    String
  responderId Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  startedAt   DateTime?
  completedAt DateTime?

  responder User @relation(fields: [responderId], references: [id])
  complaint Complaint @relation(fields: [complaintId], references: [id], onDelete: Cascade)
}